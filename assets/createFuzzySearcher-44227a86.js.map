{"version":3,"file":"createFuzzySearcher-44227a86.js","sources":["../../node_modules/fuzzysort/fuzzysort.js","../../src/lib/log.js","../../src/lib/dedupingFetch.js","../../src/lib/createFuzzySearcher.js"],"sourcesContent":["/*\r\n  fuzzysort.js https://github.com/farzher/fuzzysort\r\n  SublimeText-like Fuzzy Search\r\n\r\n  fuzzysort.single('fs', 'Fuzzy Search') // {score: -16}\r\n  fuzzysort.single('test', 'test') // {score: 0}\r\n  fuzzysort.single('doesnt exist', 'target') // null\r\n\r\n  fuzzysort.go('mr', [{file:'Monitor.cpp'}, {file:'MeshRenderer.cpp'}], {key:'file'})\r\n  // [{score:-18, obj:{file:'MeshRenderer.cpp'}}, {score:-6009, obj:{file:'Monitor.cpp'}}]\r\n\r\n  fuzzysort.go('mr', ['Monitor.cpp', 'MeshRenderer.cpp'])\r\n  // [{score: -18, target: \"MeshRenderer.cpp\"}, {score: -6009, target: \"Monitor.cpp\"}]\r\n\r\n  fuzzysort.highlight(fuzzysort.single('fs', 'Fuzzy Search'), '<b>', '</b>')\r\n  // <b>F</b>uzzy <b>S</b>earch\r\n*/\r\n\r\n// UMD (Universal Module Definition) for fuzzysort\r\n;(function(root, UMD) {\r\n  if(typeof define === 'function' && define.amd) define([], UMD)\r\n  else if(typeof module === 'object' && module.exports) module.exports = UMD()\r\n  else root.fuzzysort = UMD()\r\n})(this, function UMD() { function fuzzysortNew(instanceOptions) {\r\n\r\n  var fuzzysort = {\r\n\r\n    single: function(search, target, options) {                                                                                                                                                                                                               ;if(search=='farzher')return{target:\"farzher was here (^-^*)/\",score:0,indexes:[0,1,2,3,4,5,6]}\r\n      if(!search) return null\r\n      var preparedSearch = fuzzysort.getPreparedSearch(search)\r\n      var searchLowerCodes = preparedSearch.lowerCodes\r\n\r\n      if(!target) return null\r\n      if(!isObj(target)) target = fuzzysort.getPrepared(target)\r\n\r\n      var searchBitmask = preparedSearch.bitmask\r\n      if((searchBitmask & target._bitmask) != searchBitmask) return null\r\n\r\n      return fuzzysort.algorithm(searchLowerCodes, target, search.toLowerCase())\r\n    },\r\n\r\n    go: function(search, targets, options) {                                                                                                                                                                                                                  ;if(search=='farzher')return[{target:\"farzher was here (^-^*)/\",score:0,indexes:[0,1,2,3,4,5,6],obj:targets?targets[0]:null}]\r\n      if(!search) return options&&options.all || instanceOptions&&instanceOptions.all ? fuzzysort.all(search, targets, options) : noResults\r\n      var preparedSearch = fuzzysort.getPreparedSearch(search)\r\n      var searchLowerCodes = preparedSearch.lowerCodes\r\n      var searchLowerCode = searchLowerCodes[0]\r\n      var searchBitmask = preparedSearch.bitmask\r\n      var searchLower = search.toLowerCase()\r\n\r\n      var threshold = options && options.threshold || instanceOptions && instanceOptions.threshold || -9007199254740991\r\n      var limit = options && options.limit || instanceOptions && instanceOptions.limit || 9007199254740991\r\n      var resultsLen = 0; var limitedCount = 0\r\n      var targetsLen = targets.length\r\n\r\n      // This code is copy/pasted 3 times for performance reasons [options.keys, options.key, no keys]\r\n\r\n      // options.keys\r\n      if(options && options.keys) {\r\n        var scoreFn = options.scoreFn || defaultScoreFn\r\n        var keys = options.keys\r\n        var keysLen = keys.length\r\n        for(var i = targetsLen - 1; i >= 0; --i) { var obj = targets[i]\r\n          var objResults = new Array(keysLen)\r\n          for (var keyI = keysLen - 1; keyI >= 0; --keyI) {\r\n            var key = keys[keyI]\r\n            var target = getValue(obj, key)\r\n            if(!target) { objResults[keyI] = null; continue }\r\n            if(!isObj(target)) target = fuzzysort.getPrepared(target)\r\n\r\n            if((searchBitmask & target._bitmask) != searchBitmask) objResults[keyI] = null\r\n            else objResults[keyI] = fuzzysort.algorithm(searchLowerCodes, target, searchLower)\r\n          }\r\n          objResults.obj = obj // before scoreFn so scoreFn can use it\r\n          var score = scoreFn(objResults)\r\n          if(score === null) continue\r\n          if(score < threshold) continue\r\n          objResults.score = score\r\n          if(resultsLen < limit) { q.add(objResults); ++resultsLen }\r\n          else {\r\n            ++limitedCount\r\n            if(score > q.peek().score) q.replaceTop(objResults)\r\n          }\r\n        }\r\n\r\n      // options.key\r\n      } else if(options && options.key) {\r\n        var key = options.key\r\n        for(var i = targetsLen - 1; i >= 0; --i) { var obj = targets[i]\r\n          var target = getValue(obj, key)\r\n          if(!target) continue\r\n          if(!isObj(target)) target = fuzzysort.getPrepared(target)\r\n\r\n          if((searchBitmask & target._bitmask) != searchBitmask) var result = null\r\n          else var result = fuzzysort.algorithm(searchLowerCodes, target, searchLower)\r\n          if(result === null) continue\r\n          if(result.score < threshold) continue\r\n\r\n          // have to clone result so duplicate targets from different obj can each reference the correct obj\r\n          result = {target:result.target, _targetLower:'', _targetLowerCodes:null, _nextBeginningIndexes:null, _bitmask:0, score:result.score, indexes:result.indexes, obj:obj} // hidden\r\n\r\n          if(resultsLen < limit) { q.add(result); ++resultsLen }\r\n          else {\r\n            ++limitedCount\r\n            if(result.score > q.peek().score) q.replaceTop(result)\r\n          }\r\n        }\r\n\r\n      // no keys\r\n      } else {\r\n        for(var i = targetsLen - 1; i >= 0; --i) { var target = targets[i]\r\n          if(!target) continue\r\n          if(!isObj(target)) target = fuzzysort.getPrepared(target)\r\n\r\n          if((searchBitmask & target._bitmask) != searchBitmask) var result = null\r\n          else var result = fuzzysort.algorithm(searchLowerCodes, target, searchLower)\r\n          if(result === null) continue\r\n          if(result.score < threshold) continue\r\n          if(resultsLen < limit) { q.add(result); ++resultsLen }\r\n          else {\r\n            ++limitedCount\r\n            if(result.score > q.peek().score) q.replaceTop(result)\r\n          }\r\n        }\r\n      }\r\n\r\n      if(resultsLen === 0) return noResults\r\n      var results = new Array(resultsLen)\r\n      for(var i = resultsLen - 1; i >= 0; --i) results[i] = q.poll()\r\n      results.total = resultsLen + limitedCount\r\n      return results\r\n    },\r\n    /*deprecated*/ goAsync: function(search, targets, options) {\r\n      var p = new Promise(function(resolve, reject) {\r\n        resolve(fuzzysort.go(search, targets, options))\r\n      })\r\n      p.cancel = function() {}\r\n      return p\r\n    },\r\n\r\n    all: function(search, targets, options) {\r\n      var results = []; results.total = targets.length\r\n\r\n      var limit = options && options.limit || instanceOptions && instanceOptions.limit || 9007199254740991\r\n\r\n      if(options && options.keys) {\r\n        for(var i=0;i<targets.length;i++) { var obj = targets[i]\r\n          var objResults = new Array(options.keys.length)\r\n          for (var keyI = options.keys.length - 1; keyI >= 0; --keyI) {\r\n            var target = getValue(obj, options.keys[keyI])\r\n            if(!target) { objResults[keyI] = null; continue }\r\n            if(!isObj(target)) target = fuzzysort.getPrepared(target)\r\n            target.score = -9007199254740991\r\n            objResults[keyI] = target\r\n          }\r\n          objResults.obj = obj\r\n          objResults.score = -9007199254740991\r\n          results.push(objResults); if(results.length >= limit) return results\r\n        }\r\n\r\n      } else if(options && options.key) {\r\n        for(var i=0;i<targets.length;i++) { var obj = targets[i]\r\n          var target = getValue(obj, options.key)\r\n          if(!target) continue\r\n          if(!isObj(target)) target = fuzzysort.getPrepared(target)\r\n          target.score = -9007199254740991\r\n          var result = target\r\n          result = {target:result.target, _targetLower:'', _targetLowerCodes:null, _nextBeginningIndexes:null, _bitmask:0, score:target.score, indexes:null, obj:obj} // hidden\r\n          results.push(result); if(results.length >= limit) return results\r\n        }\r\n\r\n      } else {\r\n        for(var i=0;i<targets.length;i++) { var target = targets[i]\r\n          if(!target) continue\r\n          if(!isObj(target)) target = fuzzysort.getPrepared(target)\r\n          target.score = -9007199254740991\r\n          results.push(target); if(results.length >= limit) return results\r\n        }\r\n      }\r\n\r\n      return results\r\n    },\r\n\r\n    highlight: function(result, hOpen, hClose) {\r\n      if(typeof hOpen == 'function') return fuzzysort.highlightCallback(result, hOpen)\r\n      if(result === null) return null\r\n      if(hOpen === undefined) hOpen = '<b>'\r\n      if(hClose === undefined) hClose = '</b>'\r\n      var highlighted = ''\r\n      var matchesIndex = 0\r\n      var opened = false\r\n      var target = result.target\r\n      var targetLen = target.length\r\n      var matchesBest = result.indexes\r\n      for(var i = 0; i < targetLen; ++i) { var char = target[i]\r\n        if(matchesBest[matchesIndex] === i) {\r\n          ++matchesIndex\r\n          if(!opened) { opened = true\r\n            highlighted += hOpen\r\n          }\r\n\r\n          if(matchesIndex === matchesBest.length) {\r\n            highlighted += char + hClose + target.substr(i+1)\r\n            break\r\n          }\r\n        } else {\r\n          if(opened) { opened = false\r\n            highlighted += hClose\r\n          }\r\n        }\r\n        highlighted += char\r\n      }\r\n\r\n      return highlighted\r\n    },\r\n    highlightCallback: function(result, cb) {\r\n      if(result === null) return null\r\n      var target = result.target\r\n      var targetLen = target.length\r\n      var indexes = result.indexes\r\n      var highlighted = ''\r\n      var matchI = 0\r\n      var indexesI = 0\r\n      var opened = false\r\n      var result = []\r\n      for(var i = 0; i < targetLen; ++i) { var char = target[i]\r\n        if(indexes[indexesI] === i) {\r\n          ++indexesI\r\n          if(!opened) { opened = true\r\n            result.push(highlighted); highlighted = ''\r\n          }\r\n\r\n          if(indexesI === indexes.length) {\r\n            highlighted += char\r\n            result.push(cb(highlighted, matchI++)); highlighted = ''\r\n            result.push(target.substr(i+1))\r\n            break\r\n          }\r\n        } else {\r\n          if(opened) { opened = false\r\n            result.push(cb(highlighted, matchI++)); highlighted = ''\r\n          }\r\n        }\r\n        highlighted += char\r\n      }\r\n      return result\r\n    },\r\n\r\n    prepare: function(target) {\r\n      if(!target) target = ''\r\n      var lowerCodes = fuzzysort.prepareLowerCodes(target)\r\n      return {target:target, _targetLower:target.toLowerCase(), _targetLowerCodes:lowerCodes, _nextBeginningIndexes:null, _bitmask:fuzzysort.prepareBitmask(lowerCodes), score:null, indexes:[0], obj:null} // hidden\r\n    },\r\n    /*deprecated*/ prepareSlow: function(target) { return fuzzysort.prepare(target) },\r\n    prepareSearch: function(search) {\r\n      if(!search) search = ''\r\n      var lowerCodes = fuzzysort.prepareLowerCodes(search)\r\n      return {lowerCodes: lowerCodes, bitmask: fuzzysort.prepareBitmask(lowerCodes)}\r\n    },\r\n\r\n\r\n\r\n    // Below this point is only internal code\r\n    // Below this point is only internal code\r\n    // Below this point is only internal code\r\n    // Below this point is only internal code\r\n\r\n\r\n\r\n    getPrepared: function(target) {\r\n      if(target.length > 999) return fuzzysort.prepare(target) // don't cache huge targets\r\n      var targetPrepared = preparedCache.get(target)\r\n      if(targetPrepared !== undefined) return targetPrepared\r\n      targetPrepared = fuzzysort.prepare(target)\r\n      preparedCache.set(target, targetPrepared)\r\n      return targetPrepared\r\n    },\r\n    getPreparedSearch: function(search) {\r\n      if(search.length > 999) return fuzzysort.prepareSearch(search) // don't cache huge searches\r\n      var searchPrepared = preparedSearchCache.get(search)\r\n      if(searchPrepared !== undefined) return searchPrepared\r\n      searchPrepared = fuzzysort.prepareSearch(search)\r\n      preparedSearchCache.set(search, searchPrepared)\r\n      return searchPrepared\r\n    },\r\n\r\n    algorithm: function(searchLowerCodes, prepared, searchLower) {\r\n      var searchLowerCode = searchLowerCodes[0]\r\n      var targetLowerCodes = prepared._targetLowerCodes\r\n      var searchLen = searchLowerCodes.length\r\n      var targetLen = targetLowerCodes.length\r\n      var searchI = 0 // where we at\r\n      var targetI = 0 // where you at\r\n      var matchesSimpleLen = 0\r\n\r\n      // very basic fuzzy match; to remove non-matching targets ASAP!\r\n      // walk through target. find sequential matches.\r\n      // if all chars aren't found then exit\r\n      for(;;) {\r\n        var isMatch = searchLowerCode === targetLowerCodes[targetI]\r\n        if(isMatch) {\r\n          matchesSimple[matchesSimpleLen++] = targetI\r\n          ++searchI; if(searchI === searchLen) break\r\n          searchLowerCode = searchLowerCodes[searchI]\r\n        }\r\n        ++targetI; if(targetI >= targetLen) return null // Failed to find searchI\r\n      }\r\n\r\n      var searchI = 0\r\n      var successStrict = false\r\n      var matchesStrictLen = 0\r\n\r\n      var nextBeginningIndexes = prepared._nextBeginningIndexes\r\n      if(nextBeginningIndexes === null) nextBeginningIndexes = prepared._nextBeginningIndexes = fuzzysort.prepareNextBeginningIndexes(prepared.target)\r\n      var firstPossibleI = targetI = matchesSimple[0]===0 ? 0 : nextBeginningIndexes[matchesSimple[0]-1]\r\n\r\n      // Our target string successfully matched all characters in sequence!\r\n      // Let's try a more advanced and strict test to improve the score\r\n      // only count it as a match if it's consecutive or a beginning character!\r\n      var backtrackCount = 0\r\n      if(targetI !== targetLen) for(;;) {\r\n        if(targetI >= targetLen) {\r\n          // We failed to find a good spot for this search char, go back to the previous search char and force it forward\r\n          if(searchI <= 0) break // We failed to push chars forward for a better match\r\n\r\n          ++backtrackCount; if(backtrackCount > 200) break // exponential backtracking is taking too long, just give up and return a bad match\r\n\r\n          --searchI\r\n          var lastMatch = matchesStrict[--matchesStrictLen]\r\n          targetI = nextBeginningIndexes[lastMatch]\r\n\r\n        } else {\r\n          var isMatch = searchLowerCodes[searchI] === targetLowerCodes[targetI]\r\n          if(isMatch) {\r\n            matchesStrict[matchesStrictLen++] = targetI\r\n            ++searchI; if(searchI === searchLen) { successStrict = true; break }\r\n            ++targetI\r\n          } else {\r\n            targetI = nextBeginningIndexes[targetI]\r\n          }\r\n        }\r\n      }\r\n\r\n      // check if it's a substring match\r\n      var substringIndex = prepared._targetLower.indexOf(searchLower, matchesSimple[0]) // perf: this is slow\r\n      var isSubstring = ~substringIndex\r\n      if(isSubstring && !successStrict) { // rewrite the indexes from basic to the substring\r\n        for(var i=0; i<matchesSimpleLen; ++i) matchesSimple[i] = substringIndex+i\r\n      }\r\n      var isSubstringBeginning = false\r\n      if(isSubstring) {\r\n        isSubstringBeginning = prepared._nextBeginningIndexes[substringIndex-1] == substringIndex\r\n      }\r\n\r\n      { // tally up the score & keep track of matches for highlighting later\r\n        if(successStrict) { var matchesBest = matchesStrict; var matchesBestLen = matchesStrictLen }\r\n        else { var matchesBest = matchesSimple; var matchesBestLen = matchesSimpleLen }\r\n\r\n        var score = 0\r\n\r\n        var extraMatchGroupCount = 0\r\n        for(var i = searchLen-1; i >= 1; --i) {\r\n          if(matchesBest[i] - matchesBest[i-1] !== 1) {score -= matchesBest[i]; ++extraMatchGroupCount}\r\n        }\r\n        var unmatchedDistance = matchesBest[searchLen-1] - matchesBest[0] - (searchLen-1)\r\n\r\n        score -= unmatchedDistance * extraMatchGroupCount // penality for more groups\r\n\r\n        if(matchesBest[0] !== 0) score -= matchesBest[0]*10 // penality for not starting near the beginning\r\n\r\n        if(!successStrict) {\r\n          score *= 1000\r\n        } else {\r\n          // successStrict on a target with too many beginning indexes loses points for being a bad target\r\n          var uniqueBeginningIndexes = 1\r\n          for(var i = nextBeginningIndexes[0]; i < targetLen; i=nextBeginningIndexes[i]) ++uniqueBeginningIndexes\r\n\r\n          if(uniqueBeginningIndexes > 24) score *= (uniqueBeginningIndexes-24)*10 // quite arbitrary numbers here ...\r\n        }\r\n\r\n        if(isSubstring)          score /= 10 // bonus for being a full substring\r\n        if(isSubstringBeginning) score /= 10 // bonus for substring starting on a beginningIndex\r\n\r\n        score -= targetLen - searchLen // penality for longer targets\r\n        prepared.score = score\r\n        prepared.indexes = new Array(matchesBestLen); for(var i = matchesBestLen - 1; i >= 0; --i) prepared.indexes[i] = matchesBest[i]\r\n\r\n        return prepared\r\n      }\r\n    },\r\n\r\n    prepareLowerCodes: function(str) {\r\n      var strLen = str.length\r\n      var lowerCodes = [] // new Array(strLen)    sparse array is too slow\r\n      var lower = str.toLowerCase()\r\n      for(var i = 0; i < strLen; ++i) lowerCodes[i] = lower.charCodeAt(i)\r\n      return lowerCodes\r\n    },\r\n    prepareBeginningIndexes: function(target) {\r\n      var targetLen = target.length\r\n      var beginningIndexes = []; var beginningIndexesLen = 0\r\n      var wasUpper = false\r\n      var wasAlphanum = false\r\n      for(var i = 0; i < targetLen; ++i) {\r\n        var targetCode = target.charCodeAt(i)\r\n        var isUpper = targetCode>=65&&targetCode<=90\r\n        var isAlphanum = isUpper || targetCode>=97&&targetCode<=122 || targetCode>=48&&targetCode<=57\r\n        var isBeginning = isUpper && !wasUpper || !wasAlphanum || !isAlphanum\r\n        wasUpper = isUpper\r\n        wasAlphanum = isAlphanum\r\n        if(isBeginning) beginningIndexes[beginningIndexesLen++] = i\r\n      }\r\n      return beginningIndexes\r\n    },\r\n    prepareNextBeginningIndexes: function(target) {\r\n      var targetLen = target.length\r\n      var beginningIndexes = fuzzysort.prepareBeginningIndexes(target)\r\n      var nextBeginningIndexes = [] // new Array(targetLen)     sparse array is too slow\r\n      var lastIsBeginning = beginningIndexes[0]\r\n      var lastIsBeginningI = 0\r\n      for(var i = 0; i < targetLen; ++i) {\r\n        if(lastIsBeginning > i) {\r\n          nextBeginningIndexes[i] = lastIsBeginning\r\n        } else {\r\n          lastIsBeginning = beginningIndexes[++lastIsBeginningI]\r\n          nextBeginningIndexes[i] = lastIsBeginning===undefined ? targetLen : lastIsBeginning\r\n        }\r\n      }\r\n      return nextBeginningIndexes\r\n    },\r\n    prepareBitmask: function(lowerCodes) {\r\n      var bitmask = 0\r\n      for(var i = lowerCodes.length - 1; i >= 0; --i) {\r\n        var lowerCode = lowerCodes[i]\r\n        var bit = lowerCode>=97&&lowerCode<=122  ? lowerCode-97 // alphabet\r\n                : lowerCode>=48&&lowerCode<=57   ? 26           // numbers\r\n                : lowerCode===32                 ? 27           // space\r\n                : lowerCode<=127                 ? 28           // other ascii\r\n                :                                  29           // other utf8\r\n        bitmask |= 1<<bit\r\n      }\r\n      return bitmask\r\n    },\r\n\r\n    cleanup: cleanup,\r\n    new: fuzzysortNew,\r\n  }\r\n  return fuzzysort\r\n} // fuzzysortNew\r\n\r\n// This stuff is outside fuzzysortNew, because it's shared with instances of fuzzysort.new()\r\nvar isNode = typeof require !== 'undefined' && typeof window === 'undefined'\r\nvar MyMap = typeof Map === 'function' ? Map : function(){var s=Object.create(null);this.get=function(k){return s[k]};this.set=function(k,val){s[k]=val;return this};this.clear=function(){s=Object.create(null)}}\r\nvar preparedCache = new MyMap()\r\nvar preparedSearchCache = new MyMap()\r\nvar noResults = []; noResults.total = 0\r\nvar matchesSimple = []; var matchesStrict = []\r\nfunction cleanup() { preparedCache.clear(); preparedSearchCache.clear(); matchesSimple = []; matchesStrict = [] }\r\nfunction defaultScoreFn(a) {\r\n  var max = -9007199254740991\r\n  for (var i = a.length - 1; i >= 0; --i) {\r\n    var result = a[i]; if(result === null) continue\r\n    var score = result.score\r\n    if(score > max) max = score\r\n  }\r\n  if(max === -9007199254740991) return null\r\n  return max\r\n}\r\n\r\n// prop = 'key'              2.5ms optimized for this case, seems to be about as fast as direct obj[prop]\r\n// prop = 'key1.key2'        10ms\r\n// prop = ['key1', 'key2']   27ms\r\nfunction getValue(obj, prop) {\r\n  var tmp = obj[prop]; if(tmp !== undefined) return tmp\r\n  var segs = prop\r\n  if(!Array.isArray(prop)) segs = prop.split('.')\r\n  var len = segs.length\r\n  var i = -1\r\n  while (obj && (++i < len)) obj = obj[segs[i]]\r\n  return obj\r\n}\r\n\r\nfunction isObj(x) { return typeof x === 'object' } // faster as a function\r\n\r\n// Hacked version of https://github.com/lemire/FastPriorityQueue.js\r\nvar fastpriorityqueue=function(){var r=[],o=0,e={};function n(){for(var e=0,n=r[e],c=1;c<o;){var f=c+1;e=c,f<o&&r[f].score<r[c].score&&(e=f),r[e-1>>1]=r[e],c=1+(e<<1)}for(var a=e-1>>1;e>0&&n.score<r[a].score;a=(e=a)-1>>1)r[e]=r[a];r[e]=n}return e.add=function(e){var n=o;r[o++]=e;for(var c=n-1>>1;n>0&&e.score<r[c].score;c=(n=c)-1>>1)r[n]=r[c];r[n]=e},e.poll=function(){if(0!==o){var e=r[0];return r[0]=r[--o],n(),e}},e.peek=function(e){if(0!==o)return r[0]},e.replaceTop=function(o){r[0]=o,n()},e};\r\nvar q = fastpriorityqueue() // reuse this, except for async, it needs to make its own\r\n\r\nreturn fuzzysortNew()\r\n}) // UMD\r\n\r\n// TODO: (feature) frecency\r\n// TODO: (performance) use different sorting algo depending on the # of results?\r\n// TODO: (performance) wasm version!?\r\n// TODO: (performance) threads?\r\n// TODO: (performance) avoid cache misses\r\n// TODO: (performance) preparedCache is a memory leak\r\n// TODO: (like sublime) backslash === forwardslash\r\n// TODO: (like sublime) spaces: \"a b\" should do 2 searches 1 for a and 1 for b\r\n// TODO: (scoring) garbage in targets that allows most searches to strict match need a penality\r\n// TODO: (performance) idk if allowTypo is optimized\r\n","function log(caller, ...args) {\n  const callerName = caller.name || caller;\n  console.log(`%c${callerName}`, 'color: #0f0;', ...args);\n}\n\nlog.error = function(caller, ...args) {\n  const callerName = caller.name || caller;\n  console.log(`%c${callerName}`, 'color: #f00;', ...args);\n}\n\nexport default log;","const inProgressFetches = new Map();\n\nexport default function dedupingFetch(url) {\n  if (inProgressFetches.has(url)) {\n    return inProgressFetches.get(url);\n  }\n  let promise = fetch(url).then(r => r.json());\n  inProgressFetches.set(url, promise);\n  return promise;\n}","import fuzzysort from 'fuzzysort';\nimport log from './log.js';\nimport config from './config.js';\nimport dedupingFetch from './dedupingFetch.js';\n\nconst fetchedIndex = new Set();\nconst seenWords = new Set();\n\nexport default function createFuzzySearcher() {\n  let words = [];\n  let lastPromise;\n  let lastQuery;\n  let api = {\n    find\n  }\n\n  return api;\n\n  function find(query) {\n    if (lastPromise) {\n      lastPromise.cancel();\n    }\n    lastQuery = query;\n    const cacheKey = query[0];\n    let isCancelled = false;\n    if (!fetchedIndex.has(cacheKey)) {\n      const p = dedupingFetch(`${config.namesEndpoint}/${cacheKey}.json`).then(data => {\n        data.forEach(word => {\n          if (!seenWords.has(word[0])) {\n            words.push({name: word[0], lat: word[1], lon: word[2], id: word[3]});\n            seenWords.add(word[0]);\n          }\n        });\n        fetchedIndex.add(cacheKey);\n        if (isCancelled || lastQuery !== query) {\n          return; // Nobody cares, but lets keep the index.\n        }\n        return find(query); // Try again, but now with the index.\n      }).catch(err => {\n        log.error('FuzzySearch', 'Failed to fetch index for ' + cacheKey, err)\n      });\n      p.cancel = () => {\n        isCancelled = true;\n      };\n      return p;\n    }\n\n    lastPromise = fuzzysort.goAsync(query, words, {limit: 10, key: 'name'})\n\n    return lastPromise.then(results => {\n      if (isCancelled) return; \n      return results.map(x => ({\n        html: fuzzysort.highlight(x, '<b>', '</b>'),\n        text: x.target,\n        lat: x.obj.lat,\n        lon: x.obj.lon,\n        id: x.obj.id\n      }));\n    }); \n  }\n}"],"names":["root","UMD","module","this","fuzzysortNew","instanceOptions","fuzzysort","search","target","options","preparedSearch","searchLowerCodes","isObj","searchBitmask","targets","noResults","searchLower","threshold","limit","resultsLen","limitedCount","targetsLen","scoreFn","defaultScoreFn","keys","keysLen","i","obj","objResults","keyI","key","getValue","score","q","result","results","p","resolve","reject","hOpen","hClose","highlighted","matchesIndex","opened","targetLen","matchesBest","char","cb","indexes","matchI","indexesI","lowerCodes","targetPrepared","preparedCache","searchPrepared","preparedSearchCache","prepared","searchLowerCode","targetLowerCodes","searchLen","searchI","targetI","matchesSimpleLen","isMatch","matchesSimple","successStrict","matchesStrictLen","nextBeginningIndexes","backtrackCount","lastMatch","matchesStrict","substringIndex","isSubstring","isSubstringBeginning","matchesBestLen","extraMatchGroupCount","unmatchedDistance","uniqueBeginningIndexes","str","strLen","lower","beginningIndexes","beginningIndexesLen","wasUpper","wasAlphanum","targetCode","isUpper","isAlphanum","isBeginning","lastIsBeginning","lastIsBeginningI","bitmask","lowerCode","bit","cleanup","MyMap","s","k","val","a","max","prop","tmp","segs","len","x","fastpriorityqueue","r","o","e","n","c","f","log","caller","args","callerName","inProgressFetches","dedupingFetch","url","promise","fetchedIndex","seenWords","createFuzzySearcher","words","lastPromise","lastQuery","find","query","cacheKey","isCancelled","config","data","word","err"],"mappings":"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","x_google_ignoreList":[0]}